@*@model CalendarModel*@
@{
    ViewBag.Title = "Lịch làm việc";
    var year = DateTime.Now.Year;
    var startingDay = (int)(new DateTime(year, 1, 1).DayOfWeek);
    var calDaysInMonth = new int[12]{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
}
<div class="page-header">
    <h1>
        Lịch làm việc
        <small>
            <a href="/Employee/ProfilePage">
                <i class="ace-icon fa fa-angle-double-right"></i>
                @Model.Employee.Name
            </a>
        </small>
    </h1>
</div><!-- /.page-header -->

<div class="row">
    <div class="col-xs-12">
        <!-- PAGE CONTENT BEGINS -->
        <div class="row">
            <div class="col-sm-12">
                <div class="space"></div>

                @*<div id="calendar"></div>*@
                <div class="calendar" id="cal-year-@year">
                    <div class="row">
                        <div class="col-sm-6"><h3>@year</h3></div>
                        <div class="col-sm-6">
                            <div class=" input-group pull-right">
                                <a class="btn btn-sm" href="/Calendar/@(year-1)"><</a>
                                <a class="btn btn-sm" href="/Calendar/@(year+1)">></a>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        @for (int month = 1; month <= 12; month++)
                        {
                            var monthLength = calDaysInMonth[month-1];
                            if (month == 2)
                            { 
                                if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0)
                                {
                                    monthLength = 29;
                                }
                            }
                            <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 cal-month" id="cal-month-@month">
                                <h4>Tháng @month</h4>
                                <table class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Su</th>
                                            <th>Mo</th>
                                            <th>Tu</th>
                                            <th>We</th>
                                            <th>Th</th>
                                            <th>Fr</th>
                                            <th>Sa</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            var day = 1;
                                            if (month > 1) {
                                                startingDay = (startingDay + calDaysInMonth[month - 2]) % 7;
                                            }
                                        }
                                        @for (int j = 0; j < 5; j++)
                                        { 
                                            <tr>
                                                @for (int k = 0; k < 7; k++)
                                                {
                                                    var cellNo = j * 5 + k;
                                                    if (cellNo >= startingDay && day <= monthLength)
                                                    {
                                                        <td class="day-cell pos-rel" data-date="@day.ToString("00")/@month.ToString("00")/@year">
                                                            <div>@day</div>
                                                        </td>
                                                        day++;
                                                    }
                                                    else
                                                    {
                                                       <th>&nbsp;</th>
                                                   }
                                                }
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- PAGE CONTENT ENDS -->
    </div><!-- /.col -->
</div><!-- /.row -->

<div class="modal fade" id="modal-choose-action">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Chọn</h4>
            </div>
            <div class="modal-body">
                <p><input type="button" class="btn btn-default" value="Làm bù"/></p>
                <p><input type="button" class="btn btn-default" value="Nghỉ" /></p>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div class="modal fade" id="modal-create-absent">
    <div class="modal-dialog">
        <div class="modal-content">
            
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div class="modal fade" id="modal-create-compensating">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Làm bù</h4>
            </div>
            <div class="modal-body">
                <p>One fine body&hellip;</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary">Xong</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

@section scripts
{
    <script type="text/javascript">
        function onchangeSelectAbsentTime(select)
        {
            switch(select.value)
            {
                case 'all':
                case 'afternoon':
                case 'morning':
                    $("#absent-custom-time").addClass("hide");
                    break;
                default:
                    $("#absent-custom-time").removeClass("hide");
            };

        }
    jQuery(function ($) {

        //var dayoffs = [
        //    {
        //        date: '9/7/2015',
        //        allDay: true
        //    }
        //];
        $(".day-cell[data-date='@DateTime.Now.ToShortDateString()']").addClass("red");
        $.get('/Calendar/AttendanceSheet?year=2015', function(result)
        {
            result.dayoffs.forEach(function (dayoff, index) {
                $(".day-cell[data-date='"+dayoff.date+"']").addClass("active info");
                $(".day-cell[data-date='"+dayoff.date+"']").find("div").popover({
                    title: 'Nghỉ',
                    content: dayoff.allDay == "true" ? "Cả ngày": dayoff.start + " - " + dayoff.end,
                    trigger: 'hover',
                    container: 'body'
                });
            });
        })
        
        $(".day-cell").on('click', function()
        {
            var date = $(this).data("date");
            $("#modal-create-absent .modal-content").load("/PersonalDayoff/Create?date="+date, function () 
            {
                $("#modal-create-absent .timepicker").datetimepicker({
                    datepicker:false,
                    format:'H:i'
                })
                $("#modal-create-absent").modal("show");
            });
        })

        /* initialize the external events
            -----------------------------------------------------------------*/

        $('#external-events div.external-event').each(function () {

            // create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
            // it doesn't need to have a start or end
            var eventObject = {
                title: $.trim($(this).text()) // use the element's text as the event title
            };

            // store the Event Object in the DOM element so we can get to it later
            $(this).data('eventObject', eventObject);

            // make the event draggable using jQuery UI
            $(this).draggable({
                zIndex: 999,
                revert: true,      // will cause the event to go back to its
                revertDuration: 0  //  original position after the drag
            });

        });




        /* initialize the calendar
        -----------------------------------------------------------------*/

        var date = new Date();
        var d = date.getDate();
        var m = date.getMonth();
        var y = date.getFullYear();


        var calendar = $('#calendar').fullCalendar({
            //minTime: '09:00',
            //maxTime: '18:00',
            //businessHours: {
            //    start: '09:00', // a start time (10am in this example)
            //    end: '18:00', // an end time (6pm in this example)

            //    dow: [ 1, 2, 3, 4, 5 ]
            //    // days of week. an array of zero-based day of week integers (0=Sunday)
            //    // (Monday-Thursday in this example)
            //},
            //isRTL: true,
            buttonHtml: {
                prev: '<i class="ace-icon fa fa-chevron-left"></i>',
                next: '<i class="ace-icon fa fa-chevron-right"></i>'
            },
            events: [
                        @foreach (var job in Model.PersonalJobs)
                        {
                            <text>{
                                id : '@job.Id',
                                title : '@(Server.HtmlDecode(job.Title))',
                                start : '@job.Start.ToString("s", System.Globalization.CultureInfo.InvariantCulture)',
                                end :  '@job.End.ToString("s", System.Globalization.CultureInfo.InvariantCulture)',
                                allDay: @job.AllDay.ToString().ToLower(),
                                className : 'label-info'
                            },
                            </text>
                        }
                        
                        @foreach (var job in Model.Jobs)
                        {
                            <text>{
                                id : '@job.Id',
                                title : '@(Server.HtmlDecode(job.Title))',
                                start : '@job.StartTime.Value.ToString("s", System.Globalization.CultureInfo.InvariantCulture)',
                                end :  '@job.EndTime.Value.ToString("s", System.Globalization.CultureInfo.InvariantCulture)',
                                className : 'label-info',
                            },
                            </text>
                        }
                        @foreach (var day in Model.Dayoffs)
                        {
                            <text>{
                                start : '@day.Begin.ToString("s", System.Globalization.CultureInfo.InvariantCulture)',
                                end :  '@day.End.ToString("s", System.Globalization.CultureInfo.InvariantCulture)',
                                overlap:false,
                                allDay : true,
                                rendering: 'background',
                                backgroundColor: '#89aeff'
                            },
                            </text>
                        }
                        @foreach (var day in Model.PersonalDayOffs)
                        {
                            <text>{
                                start : '@day.Start.ToString("s", System.Globalization.CultureInfo.InvariantCulture)',
                                end :  '@day.End.ToString("s", System.Globalization.CultureInfo.InvariantCulture)',
                                title: '@day.Title',
                                overlap:false,
                                allDay : true,
                                rendering: 'background',
                                backgroundColor: '#d15b47'
                            },
                            </text>
                        }
                        @foreach (var confer in Model.Conferences)
                        {
                            <text>{
                                title : '@confer.Content',
                                start : '@confer.Start.ToString("s", System.Globalization.CultureInfo.InvariantCulture)',
                                end :  '@confer.End.ToString("s", System.Globalization.CultureInfo.InvariantCulture)',
                                className : "label-info",
                                editable: false,
                            },
                            </text>
                        }

            ],
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay'
            },
            //editable: true,
            //droppable: true, // this allows things to be dropped onto the calendar !!!
            //drop: function (date, allDay) { // this function is called when something is dropped

            //    // retrieve the dropped element's stored Event Object
            //    var originalEventObject = $(this).data('eventObject');
            //    var $extraEventClass = $(this).attr('data-class');


            //    // we need to copy it, so that multiple events don't have a reference to the same object
            //    var copiedEventObject = $.extend({}, originalEventObject);

            //    // assign it the date that was reported
            //    copiedEventObject.start = date;
            //    copiedEventObject.allDay = allDay;
            //    if ($extraEventClass) copiedEventObject['className'] = [$extraEventClass];

            //    // render the event on the calendar
            //    // the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
            //    $('#calendar').fullCalendar('renderEvent', copiedEventObject, true);

            //    $(this).remove();


            //},
            //eventDrop: function(event, delta, revertFunc) {
            //    $.post("/PersonalTask/CheckDayOff", { start: event.start.format(), end: event.end.format()})
            //                        .done(function (data) {
            //                            if(data.success)
            //                            {
            //                                console.log(event.title + " was dropped on " + event.start.format());
            //                                console.log(event.title + " was dropped on " + event.end.format());

            //                                $.post("/PersonalTask/EditTime", { id: event.id, start: event.start.format(), end: event.end.format() })
            //                                .done(function (data) {

            //                                });
            //                            }else
            //                            {
            //                                revertFunc();
            //                            }
            //                        });

            //},
            //eventResize: function( event, delta, revertFunc, jsEvent, ui, view ) {
            //    $.post("/PersonalTask/CheckDayOff", { start: event.start.format(), end: event.end.format()})
            //                        .done(function (data) {
            //                            if(data.success)
            //                            {
            //                                console.log(event.title + "resize " + event.start.format());
            //                                console.log(event.title + "resize " + event.end.format());
            //                                $.post("/PersonalTask/EditTime", { id: event.id, start: event.start.format(), end: event.end.format() })
            //                                .done(function (data) {

            //                                });
            //                            }else
            //                            {
            //                                revertFunc();
            //                            }
            //                        });

            //},
            eventRender: function(event, element) {
                var title = event.title;
                $('.fc-title', element).html(title);
            },
            eventOverlap: function(stillEvent, movingEvent) {
                return stillEvent.allDay && movingEvent.allDay;
            },
            selectable: true,
            selectHelper: true,
            select: function (start, end) {
                $("#modal-create-absent .modal-content").load("/PersonalDayoff/Create?start="+start+"&end="+end, function () 
                {
                    $("#modal-create-absent .timepicker").datetimepicker({
                        datepicker:false,
                        format:'H:i'
                    })
                    $("#modal-create-absent").modal("show");
                });
                
                //$.post("/PersonalTask/CheckDayOff", { start: start.format(), end: end.format()})
                //                    .done(function (data) {
                //                        if(data.success)
                //                        {
                //                            bootbox.dialog({
                //                                title: "Công việc",
                //                                message: '<div class="row">  ' +
                //                                    '<div class="col-md-12"> ' +
                //                                    '<form class="form-horizontal"> ' +
                //                                        '<div class="form-group"> ' +
                //                                            '<label class="col-md-4 control-label" for="name">Công việc</label> ' +
                //                                            '<div class="col-md-4"> ' +
                //                                                '<input id="name" name="name" type="text" placeholder="Tên công việc" class="form-control input-md"> ' +
                //                                            '</div> ' +
                //                                        '</div> ' +
                //                                    '</form> </div>  </div>',
                //                                buttons: {
                //                                    success: {
                //                                        label: "Save",
                //                                        className: "btn-success",
                //                                        callback: function () {
                //                                            var title = $('#name').val();
                //                                            $.post("/PersonalTask/Add", { title: title, start: start.format(), end: end.format() })
                //                                                .done(function (data) {
                //                                                    console.log(data);
                //                                                    if (data.success)
                //                                                    {
                //                                                        calendar.fullCalendar('renderEvent',
                //                                                            {
                //                                                                id : data.id,
                //                                                                title: title,
                //                                                                start: start,
                //                                                                end: end,
                //                                                                className: $('#absent').is(":checked") ? 'label-danger' : 'label-info'
                //                                                            },
                //                                                            true // make the event "stick"
                //                                                        );
                //                                                    }
                //                                                    else
                //                                                    {
                //                                                    }
                //                                                });

                //                                        }
                //                                    }
                //                                }
                //                            });

                //                            calendar.fullCalendar('unselect');
                //                        }
                //                        else
                //                        {
                //                            alert("Trùng với ngày nghỉ !");
                //                        }
                //                    });
            } ,
            dayClick: function(date, jsEvent, view) {

                //alert('Clicked on: ' + date.format());

                //alert('Coordinates: ' + jsEvent.pageX + ',' + jsEvent.pageY);

                //alert('Current view: ' + view.name);

                //// change the day's background color just for fun
                //$(this).css('background-color', 'red');
                //console.log(jsEvent);
                //return false;
            },
            eventClick: function (calEvent, jsEvent, view) {
                console.log(calEvent, jsEvent, view);
                //display a modal
                var modal =
                '<div class="modal fade">\
			          <div class="modal-dialog">\
			           <div class="modal-content">\
				         <div class="modal-body">\
				           <button type="button" class="close" data-dismiss="modal" style="margin-top:-10px;">&times;</button>\
				           <form class="no-margin">\
					          <label>Thay đổi &nbsp;</label>\
					          <input class="middle" autocomplete="off" type="text" value="' + calEvent.title + '" />\
					         <button type="submit" class="btn btn-sm btn-success"><i class="ace-icon fa fa-check"></i> Save</button>\
				           </form>\
				         </div>\
				         <div class="modal-footer">\
					        <button type="button" class="btn btn-sm btn-danger" data-action="delete"><i class="ace-icon fa fa-trash-o"></i>Xóa</button>\
					        <button type="button" class="btn btn-sm" data-dismiss="modal"><i class="ace-icon fa fa-times"></i>Hủy</button>\
				         </div>\
			          </div>\
			         </div>\
			        </div>';


                var modal = $(modal).appendTo('body');
                modal.find('form').on('submit', function (ev) {
                    ev.preventDefault();
                    //PersonalTask/Edit
                    calEvent.title = $(this).find("input[type=text]").val();

                    $.post("/PersonalTask/Edit", { id: calEvent.id, title: calEvent.title })
                    .done(function (data) {

                    });

                    calendar.fullCalendar('updateEvent', calEvent);
                    modal.modal("hide");
                });
                modal.find('button[data-action=delete]').on('click', function () {
                    //PersonalTask/Delete
                    $.post("/PersonalTask/Delete", { id: calEvent._id })
                    .done(function (data)
                    {
                        calendar.fullCalendar('removeEvents', function (ev) {
                            return (ev._id == calEvent._id);
                        })
                        modal.modal("hide");
                    });

                });

                modal.modal('show').on('hidden', function () {
                    modal.remove();
                });

            }

        });


    })
    </script>
}