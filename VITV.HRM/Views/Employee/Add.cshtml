@model EmployeeModel

<div class="row">
    <div class="col-lg-12">
        <div class="main-box">
            <header class="main-box-header clearfix">
                <h2>Thêm nhân viên</h2>
            </header>
            <div class="main-box-body clearfix">
                @using (Html.BeginForm("Add", "Employee", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
                {
                    @Html.ValidationSummary(true)
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserName, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.UserName, string.Empty, new { @class = "help-block" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                        <div class="col-lg-10">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                        <div class="col-lg-10">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Name, string.Empty, new { @class = "help-block" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UniqueTitle, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @Html.TextBoxFor(model => model.UniqueTitle, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.UniqueTitle, string.Empty, new { @class = "help-block" })
                        </div>
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProfilePicture, new { @class = "col-lg-2 control-label" })
                        @Html.HiddenFor(model => model.ProfilePicture)
                        <div class="col-lg-10">
                            <img id="photoView_first" width=200 height=200 src="@(Model != null && !String.IsNullOrEmpty(Model.ProfilePicture) ? Model.ProfilePicture : "")" />
                            <input class="form-control" id="photoinput_first" type="file" name="ProfilePicture" accept="image/*">
                        </div>
                        @Html.ValidationMessageFor(model => model.ProfilePicture, string.Empty, new { @class = "help-block" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Email, string.Empty, new { @class = "help-block" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BirthDay, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            <div class="input-group" id="datetimepicker1">
                                <span class="add-on input-group-addon"><i class="fa fa-calendar"></i></span>
                                <input class="form-control date-picker" id="id-date-picker-1" name="BirthDay" type="text" data-date-format="dd-mm-yyyy">
                                @*@Html.TextBoxFor(model => model.BirthDay, new { @class = "form-control date-picker", id = "" })*@
                            </div>
                            @Html.ValidationMessageFor(model => model.BirthDay, string.Empty, new { @class = "help-block" })
                        </div>
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.StartDate, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            <div class="input-group" id="datetimepicker1">
                                <span class="add-on input-group-addon"><i class="fa fa-calendar"></i></span>
                                <input class="form-control date-picker" id="id-date-picker-1" name="StartDate" type="text" data-date-format="dd-mm-yyyy">
                            </div>
                            @Html.ValidationMessageFor(model => model.StartDate, string.Empty, new { @class = "help-block" })
                        </div>
                    </div>
                    

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @Html.TextAreaFor(model => model.Address, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Address, string.Empty, new { @class = "help-block" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Role, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @Html.DropDownListFor(model => model.Role, ((IEnumerable<IdentityRole>)ViewBag.PossibleRoles).Select(option => new SelectListItem
                            {
                                Text = (option == null ? "None" : option.Name.ToString(System.Globalization.CultureInfo.InvariantCulture)),
                                Value = option.Id.ToString(),
                                Selected = (Model != null) && (option.Name == Model.Role)
                            }), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Role, string.Empty, new { @class = "help-block" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-lg-offset-2 col-lg-10">
                            <button type="submit" class="btn btn-success">Hoàn thành</button>
                            @Html.ActionLink("Quay về trang quản lý", "List")
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
                
<script type="text/javascript">
   
</script>