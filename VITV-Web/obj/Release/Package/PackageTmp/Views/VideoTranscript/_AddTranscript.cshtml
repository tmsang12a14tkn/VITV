@model VideoTranscriptModel

@{
    var reporters = ViewBag.Reporters;
}

@Html.HiddenFor(model => model.VideoId)
@Html.HiddenFor(model => model.UserEditedId)
@Html.HiddenFor(model => model.ConvertedToSeconds)

<div class="form-group video-spinner">
    <label>Thời gian</label>
    <div class="col-md-12">
        <div class="col-xs-6 col-md-4">
            @Html.TextBoxFor(model => model.HourSeek, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.HourSeek, string.Empty, new { @class = "help-block" })
        </div>
        <div class="col-xs-6 col-md-4">
            @Html.TextBoxFor(model => model.MinuteSeek, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MinuteSeek, string.Empty, new { @class = "help-block" })
        </div>
        <div class="col-xs-6 col-md-4">
            @Html.TextBoxFor(model => model.SecondSeek, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SecondSeek, string.Empty, new { @class = "help-block" })
        </div>
    </div>
</div>

<div class="form-group">
    <label for="Title">Nội dung</label>
    @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Title, string.Empty, new { @class = "help-block" })
</div>

<div class="form-group">
    <label for="Content">Mô tả</label>
    @Html.TextBoxFor(model => model.Content, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Content, string.Empty, new { @class = "help-block" })
</div>

<div class="form-group">
    <div class="col-lg-12">
        <label>Người thực hiện</label>
        @Html.HiddenFor(model => model.ReporterIds)
        @{
            var chkIds = new List<int>();
            var hasReporter = false;
            if (!string.IsNullOrEmpty(Model.ReporterIds))
            {
                hasReporter = true;
                var arrIds = Model.ReporterIds.Split(',');
                foreach (string id in arrIds)
                {
                    if (!string.IsNullOrWhiteSpace(id))
                    {
                        var idNormalize = id.Trim();
                        chkIds.Add(Convert.ToInt32(idNormalize));
                    }
                }
            }
        }
        <select data-placeholder="..." multiple="multiple" id="tbReporters" name="tbReporters" class="form-control">
            @foreach (var rp in reporters)
            {
                <option value="@rp.Id" @(hasReporter && chkIds.Count > 0 && chkIds.Contains(rp.Id) ? "selected" : "") data-img-src="@rp.ProfilePicture">@rp.Name</option>
            }
        </select>
        @Html.ValidationMessageFor(model => model.ReporterIds, string.Empty, new { @class = "help-block" })
    </div>
</div>

<div class="form-group" style="text-align: right">
    <button type="submit" class="btn btn-primary" id="saveBtn">Lưu</button>
    <button type="button" class="btn btn-primary" id="closeBtn">Đóng</button>    
</div>