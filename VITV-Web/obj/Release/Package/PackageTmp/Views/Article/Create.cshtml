@model ArticleModel

@{
    Layout = "../Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Tạo mới bài viết";
    var user = ViewBag.User as ApplicationUser;
}

<div class="row">
    <h2>
        <a href="@ViewBag.returnUrl">
            <i class="fa fa-arrow-left"></i>
        </a>
        Tạo mới bài viết
    </h2>
    @using (Html.BeginForm("Create", "Article", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form", id = "articleForm" }))
    {
        @Html.Partial("_CreateOrEdit")
    }
</div>


@section Scripts
{
    <script src="~/Scripts/chosen.jquery.js"></script>
    <script src="~/Scripts/ImageSelect.jquery.js"></script>

    <script>
        $(document).ready(function () {
            var catArray = [];

            //Thumbnail
            function readURL(input) {

                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#photoView').attr('src', e.target.result);
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }

            $("#photoinput").change(function () {
                readURL(this);
            });

            $('.article-editable').froalaEditor({
                toolbarButtons: ['fullscreen', 'bold', 'italic', 'underline', 'strikeThrough', 'subscript', 'superscript', 'fontFamily', 'fontSize', '|', 'color', 'emoticons', 'inlineStyle', 'paragraphStyle', '|', 'paragraphFormat', 'align', 'formatOL', 'formatUL', 'outdent', 'indent', '-', 'insertLink', 'insertImage', 'insertVideo', 'insertFile', 'insertTable', '|', 'quote', 'insertHR', 'undo', 'redo', 'clearFormatting', 'selectAll', 'html'],
                pluginsEnabled: null,
                imageUploadParam: 'files',
                imageUploadURL: '/UploadHandler/FroalaHandler.ashx',
                preloaderSrc: "/Content/assets/ajax-loader.gif",
                imagesLoadURL: '/Home/FroalaMediaManager',
                imageDeleteURL: "/Home/FroalaDelete",
                emptytext: '',
                minHeight: 400,
                fontFamilySelection: true,
                fontSizeSelection: true,
                toolbarSticky: false,
                userName: '@(user.Employee==null?user.UserName: user.Employee.Name)',
                userAvatar: '@(user.Employee==null?"/images/default-avatar.png": user.Employee.ProfilePicture)',
                articleId: '@Model.Id'
            });
           
            //Published Time
            $("#changePublishedTime-btn").click(function ()
            {
                var publishedTimeVal = $("#PublishedTime-txt").val();
                $("#PublishedTime-label").html(publishedTimeVal);
                $("#PublishedTime").val(publishedTimeVal);
            });

            //Save Draft
            $("#saveDraft-btn").click(function () {
                saveDraft();
            });

            $("#preview-btn").click(function () {
                preview();
                redirectWindow = window.open('', '_blank');
            });

            function saveDraft() {
                var form = document.forms.namedItem("articleForm");
                var oReq = new XMLHttpRequest();
                var formData = new FormData(form);
                formData.append("IsPublished", "False");
                formData.append("ArticleStatus", "0");
                oReq.open("post", form.action);
                oReq.send(formData);
                oReq.addEventListener("load", saveDraftComplete, false);
            }

            function preview() {
                var form = document.forms.namedItem("articleForm");
                var oReq = new XMLHttpRequest();
                var formData = new FormData(form);
                formData.append("IsPublished", "False");
                formData.append("ArticleStatus", "0");
                oReq.open("post", form.action);
                oReq.send(formData);
                oReq.addEventListener("load", previewComplete, false);
            }

            function saveDraftComplete(evt) {
                var response = JSON.parse(evt.target.responseText);
                if (response.success == true) {
                    document.getElementById("draftSaveTime").innerHTML = "Đã lưu nháp lúc " + response.time;
                    document.getElementById("Id").value = response.id;
                }
                else {
                    alert('Chưa điền đầy đủ thông tin');
                }
            }

            function previewComplete(evt) {
                var response = JSON.parse(evt.target.responseText);
                if (response.success == true) {
                    document.getElementById("Id").value = response.id;
                    redirectWindow.document.write('Loading preview...');
                    redirectWindow.location.href = 'http://startup.vitv.vn/tin-chu/' + response.date + '/' + response.UniqueTitle + '/' + response.id;
                }
                else {
                    alert('Chưa điền đầy đủ thông tin');
                }
            }

            var availableKeywords = [
                @foreach(Keyword keyword in ViewBag.PossibleKeywords)
                {
                    <text>"@Html.Raw(keyword.Value)",</text>
                }
            ];

            function split(val) {
                return val.split(/,\s*/);
            }

            function extractLast(term) {
                return split(term).pop();
            }

            $("#Keywords")
              // don't navigate away from the field on tab when selecting an item
              .bind("keydown", function (event) {
                  if (event.keyCode === $.ui.keyCode.TAB &&
                      $(this).data("ui-autocomplete").menu.active) {
                      event.preventDefault();
                  }
              })
              .autocomplete({
                  minLength: 0,
                  source: function (request, response) {
                      // delegate back to autocomplete, but extract the last term
                      response($.ui.autocomplete.filter(
                        availableKeywords, extractLast(request.term)));
                  },
                  focus: function () {
                      // prevent value inserted on focus
                      return false;
                  },
                  select: function (event, ui) {
                      var terms = split(this.value);
                      // remove the current input
                      terms.pop();
                      // add the selected item
                      terms.push(ui.item.value);
                      // add placeholder to get the comma-and-space at the end
                      terms.push("");
                      this.value = terms.join(", ");
                      return false;
                  }
              });

            $('.artItem').on('change', function () {
                var selfId = $(this).data('id');

                if ($(this).is(":checked")) {
                    catArray.push(selfId);
                } else {
                    catArray = $.grep(catArray, function (value) {
                        return value != selfId;
                    });
                }

                $('#CategoryIds').val(catArray.toString());
            });

            $("#tbReporters").chosen({
                width: "100%",
                no_results_text: "Không có kết quả nào!"
            });

            $('#tbReporters').on('change', function (evt, params) {
                var ids = "";
                var selectedIds = $("#tbReporters").chosen().val();

                if (selectedIds != null) {
                    $.each(selectedIds, function (index, value) {
                        ids = ids + ", " + value;
                    });
                }
                $("#ReporterIds").val(ids);
            });

            $('#add-series').on('click', function (e) {
                e.preventDefault();
                $.get('/ArticleSeries/QuickCreate?name=' + $('#new-series-name').val(), function (data, status) {
                    $('#new-series').replaceWith(
                        '<div class="radio">'
                        + '<input type="radio" name="ArticleSeriesId" id="ArticleSeriesId' + data.id + '" value="' + data.id + '" checked>'
                        + '<label for="ArticleSeriesId' + data.id + '">' + data.name + '</label>'
                        + '</div>'
                    );
                });
            });

            formmodified = 0;
            $('form *').on('change', function () {
                formmodified = 1;
            });
            $('.editable').on('editable.keydown', function (e, editor, keydownEvent) {
                if (formmodified == 0) formmodified = 1;
            });
            window.onbeforeunload = confirmExit;
            function confirmExit() {
                if (formmodified == 1) {
                    return "Các thao tác của bạn chưa được lưu. Bạn có chắc muốn tắt trang này không?";
                }
            }
            $("#saveDraft-btn, #preview-btn, #save-btn, #approve-btn").click(function () {
                formmodified = 0;
            });
        });
    </script>
}