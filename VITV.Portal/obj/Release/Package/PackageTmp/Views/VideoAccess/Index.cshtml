@{
    ViewBag.Title = "Index";
}

<div class="row">
    <div class="col-lg-12">
        <div class="main-box clearfix">
            <header class="main-box-header clearfix">
                <h2 class="pull-left">Thống kê truy cập</h2>
                <div class="filter-block pull-right">
                    <div class="form-group vd-access-sm">
                        <select id="timeSelector" class="form-control">
                            <option value="day">Theo ngày</option>
                            <option value="week">Theo tuần</option>
                            <option value="month">Theo tháng</option>
                            @*<option value="quarter">Theo quý</option>*@
                            <option value="year">Theo năm</option>
                        </select>
                    </div>
                    <div class="form-group vd-access-lg">
                        <a class="btn btn-primary active" id="btnday" data-value="day">Ngày</a>
                        <a class="btn btn-primary" id="btnweek" data-value="week">Tuần</a>
                        <a class="btn btn-primary" id="btnmonth" data-value="month">Tháng</a>
                        @*<a class="btn btn-primary" id="btnquarter" data-value="quarter">Quý</a>*@
                        <a class="btn btn-primary" id="btnyear" data-value="year">Năm</a>
                    </div>
                </div>
            </header>
            <div class="main-box-body clearfix">
                <div id="container" style="height: 600px; min-width: 310px;"></div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <button class="btn btn-default" data-toggle="modal" data-target="#exportModal">Xuất ra excel</button>
</div>

<div class="modal" id="tableModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div class="modal" id="exportModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Xuất ra excel</h4>
            </div>
            <div class="modal-body">
                <form method="post" action="/VideoAccess/ExportData">
                    <div class="form-group">
                        <label>Từ ngày</label>
                        <input type="date" name="from" />
                    </div>
                    <div class="form-group">
                        <label>Đến ngày</label>
                        <input type="date" name="to" />
                    </div>

                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">OK</button>
                    </div>
                </form>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
@section scripts
{
    <script src="~/Content/HighStock/js/highstock.js"></script>
    <script src="~/Content/HighStock/js/modules/exporting.js"></script>
    <script>

        var timeRange = 'day';
        var groupBy = 'video';
        var selectedDate = null;
        var chartQuery = '/VideoAccess/GetDateAccessData';
        var tableQuery = '/VideoAccess/GetAccessDataInADate?date=';

        var getTableQuery = function () {
            switch (timeRange) {
                case 'day':
                    if (groupBy == 'video')
                        return '/VideoAccess/GetAccessDataInADate?date=';
                    else if (groupBy == 'videocat')
                        return '/VideoAccess/GetCatAccessDataInADate?date=';
                case 'week':
                    if (groupBy == 'video')
                        return '/VideoAccess/GetAccessDataInAWeek?date=';
                    else if (groupBy == 'videocat')
                        return '/VideoAccess/GetCatAccessDataInAWeek?date=';
                case 'month':
                    if (groupBy == 'video')
                        return '/VideoAccess/GetAccessDataInAMonth?date=';
                    else if (groupBy == 'videocat')
                        return '/VideoAccess/GetCatAccessDataInAMonth?date=';
                case 'year':
                    if (groupBy == 'video')
                        return '/VideoAccess/GetAccessDataInAYear?date=';
                    else if (groupBy == 'videocat')
                        return '/VideoAccess/GetCatAccessDataInAYear?date=';
            }
        }

        var onChangeGroupBy = function (elem) {

            var val = $(elem).data('value');
            groupBy = val;
            tableQuery = getTableQuery();
            $("#tableModal .modal-content").load(tableQuery + selectedDate, function () { });
            $("#tableModal").modal('show');
        }

        $(function () {
            $("#timeSelector").on("change", function () {
                changeTimeRange($(this).val());
            });

            $("#btnday, #btnweek, #btnmonth, #btnquarter, #btnyear").on("click", function () {
                $(this).removeClass("active");
                $(this).addClass("active");
                $(this).siblings().removeClass("active");
                changeTimeRange($(this).data("value"));
            });

            function changeTimeRange(val) {
                if (val != timeRange) {
                    timeRange = val;
                    var groupBy = 'video';
                    //reload
                    if (timeRange == 'day') {
                        chartQuery = '/VideoAccess/GetDateAccessData';
                        drawChart();
                    }
                    else if (timeRange == 'week') {
                        chartQuery = '/VideoAccess/GetWeekAccessData';
                        drawChart();
                    }
                    else if (timeRange == 'month') {
                        chartQuery = '/VideoAccess/GetMonthAccessData';
                        drawChart();
                    }
                    else if (timeRange == 'quater') {
                        chartQuery = '/VideoAccess/GetQuaterAccessData';
                        drawChart();
                    }
                    else if (timeRange == 'year') {
                        chartQuery = '/VideoAccess/GetYearAccessData';
                        drawChart();
                    }
                }
            }

            Highcharts.setOptions({
                lang: {
                    loading: 'Đang tải...',
                    months: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'],
                    weekdays: ['Thứ 2', 'Thứ 3', 'Thứ 4', 'Thứ 5', 'Thứ 6', 'Thứ 7', 'Chủ nhật'],
                    shortMonths: ['01', '02', '03', '4', '05', '06', '07', '08', '09', '10', '11', '12'],
                    exportButtonTitle: "Xuất ra",
                    printButtonTitle: "Khoảng",
                    rangeSelectorFrom: "Từ",
                    rangeSelectorTo: "Đến",
                    rangeSelectorZoom: "Phóng lớn",
                    downloadPNG: 'Lưu ảnh PNG',
                    downloadJPEG: 'Lưu ảnh JPEG',
                    downloadPDF: 'Lưu tệp PDF',
                    downloadSVG: 'Lưu ảnh SVG'
                }
            });

            var names = ["Người dùng", "Lượt người dùng xem", "Tất cả lượt xem", "Lượt xem trang chủ"];
            var seriesOptions = [];

            function drawChart() {
                $.getJSON(chartQuery, function (accessdata) {
                    $.each(names, function (i, name) {
                        var data = [];
                        $.each(accessdata, function (j, peice) {
                            data.push([peice[0], peice[i + 1]]);
                        });
                        seriesOptions[i] = {
                            name: name,
                            data: data,
                            turboThreshold: 10000
                        };
                    });

                    // Create the chart
                    $('#container').highcharts('StockChart', {
                        rangeSelector: {
                            buttons: [
                            {
                                count: 30,
                                type: 'day',
                                text: '30 ngày'
                            },
                            {
                                count: 52,
                                type: 'week',
                                text: '52 tuần'
                            }
                            , {
                                count: 12,
                                type: 'month',
                                text: '12 tháng'
                            }, {
                                count: 5,
                                type: 'year',
                                text: '5 năm'
                            }
                            ],
                            inputEnabled: false,
                            buttonSpacing: 10,
                            buttonTheme: {
                                width: 100,
                                style:
                                {
                                    color: "#1f8dc3"
                                }
                            },
                            selected: 2
                        },
                        //navigator: {
                        //    adaptToUpdatedData: false,
                        //    series: seriesOptions
                        //},
                        title: {
                            text: 'Biểu đồ thống kê lượng truy cập'
                        },
                        series: seriesOptions,
                        scrollbar: {
                            barBackgroundColor: '#1f8dc3',
                            barBorderRadius: 3,
                            barBorderWidth: 0,
                            buttonBackgroundColor: '#CF2B3E',
                            buttonBorderWidth: 0,
                            buttonBorderRadius: 7,
                            trackBackgroundColor: 'none',
                            trackBorderWidth: 1,
                            trackBorderRadius: 8,
                            trackBorderColor: '#CCC'
                        },
                        tooltip:
                        {
                            valueDecimals: 2,
                            formatter: function () {
                                var s = '<b>' + Highcharts.dateFormat('%e/%b/%Y', this.x) + '</b>';
                                $.each(this.points, function () {
                                    s += '<br/> <span style="font-weight:bold; color:' + this.series.color + '">' + this.series.name + '</span>: ' + this.y;
                                });

                                return s;
                            }
                        },
                        xAxis:
                        {
                            dateTimeLabelFormats:
                            {
                                millisecond: '%H:%M:%S.%L',
                                second: '%H:%M:%S',
                                minute: '%H:%M',
                                hour: '%H:%M',
                                day: '%e/%b',
                                week: '%e/%b',
                                month: '%b/%y',
                                year: '%Y'
                            }
                        },
                        plotOptions:
                        {
                            series:
                            {
                                point:
                                {
                                    events:
                                    {
                                        click: function (e) {
                                            selectedDate = Highcharts.dateFormat('%Y-%m-%d', this.x);;
                                            tableQuery = getTableQuery();
                                            $("#tableModal .modal-content").load(tableQuery + selectedDate, function () {

                                            });
                                            $("#tableModal").modal('show');
                                        }
                                    }
                                }
                            }
                        }
                    });
                });
                $("#accessPerVideo").empty();
            }

            drawChart();
        });

        $('#sidebar-nav #videoAccessMng').toggleClass("active");
        $('#sidebar-nav #videoAccessMng').siblings().removeClass("active");

        $('#sidebar-nav a#vda-li-1').toggleClass("active");
        $('#sidebar-nav a#vda-li-1').parent().siblings().removeClass("active");
    </script>
}

